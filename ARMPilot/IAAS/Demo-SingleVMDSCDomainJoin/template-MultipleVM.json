{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "localAdminUserName": {
      "type": "string",
      "defaultValue": "ITVSO",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for domain joining"
      }
    },
    "domainAdminPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "vmName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "AzureSKU": {
      "type": "string",
      "defaultValue": "A2",
      "allowedValues": [
        "A2",
        "A3",
        "D4",
        "Standard_A2",
        "Standard_A4"
      ],
      "metadata": {
        "Description": "Azure VM size of the VM"
      }
    },
    "vnetId": {
      "type": "string",
      "metadata": {
        "description": "The Virtual Network that you want your VM to connect to, so that it can access a specific network, such as corp net etc."
      }
    },
    "imagePublisher": {
      "type": "string",
      "allowedValues": ["MicrosoftWindowsServer","MicrosoftSQLServer"],
      "metadata": {
        "description": "OS Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "OS Image Offer"
      }
    },
    "sku": {
      "type": "string",
       "minLength": 1,
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account type"
      }
    },
    "userImageStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account where the VM image(s) will be created"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "redmond.corp.microsoft.com",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "snoozeDate": {
      "type": "string",
      "metadata": {
        "description": "Snooze date"
      }
    },
    "numberOfInstances": {
      "type": "int", 
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "additionalAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Additional admins that can login to the VMs"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix that defines how many IP addresses are available on the Subnet(10.0.0.0/24)"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "imageOffer": "[parameters('imageOffer')]",
    "imagePublisher": "[parameters('imagePublisher')]",
    "sku": "[parameters('sku')]",
    "nicName": "[parameters('vmName')]",
    "osDiskVhdName": "[concat('http://',parameters('userImageStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmName'),'osDisk')]",
    "storageAccountType": "[parameters('storageAccountType')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetPrefix": "[parameters('subnetPrefix')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "autologonContent": "[concat('<AutoLogon><Password><Value>',parameters('localAdminPassword'),'</Value></Password><Domain>.</Domain><Enabled>true</Enabled><LogonCount>1</LogonCount><Username>',parameters('localAdminUserName'),'</Username></AutoLogon>')]",
    "firstLogonCommands": "<FirstLogonCommands><SynchronousCommand><CommandLine>netsh advfirewall firewall set rule group=&quot;Windows Management Instrumentation (WMI)&quot; new enable=Yes</CommandLine><Description>Update Firewall Settings</Description><Order>1</Order></SynchronousCommand><SynchronousCommand><CommandLine>logoff.exe</CommandLine><Description>Logoff</Description><Order>2</Order></SynchronousCommand></FirstLogonCommands>",
    "vmName": "[parameters('vmName')]",
    "vnetId": "[parameters('vnetId')]",
    "DiskArtifacts": "http://cptteamb.blob.core.windows.net/",
    "AzureSKUD4": {
     "vmSize": "Standard_D4",
      "diskCount": "4",
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskSize": "500"
        },
        "2": {
          "DiskName": "O",
          "DiskSize": "500"
        },
        "3": {
          "DiskName": "T",
          "DiskSize": "500"
        },
        "4": {
          "DiskName": "S",
          "DiskSize": "500"
        }
      },
      "diskSizeGB": 500,
      "diskCaching": "None",
      "vmDiskTemplate": "[concat(variables('DiskArtifacts'), 'cloudmsdisk/DiskArray.json')]"
    },
    "AzureSKUA3": {
      "vmSize": "Standard_A3",
      "diskCount": "3",
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskSize": "400"
        },
        "2": {
          "DiskName": "O",
          "DiskSize": "400"
        },
        "3": {
          "DiskName": "T",
          "DiskSize": "400"
        }
      },
      "diskCaching": "None",
      "diskSizeGB": 400,
      "vmDiskTemplate": "[concat(variables('DiskArtifacts'), 'cloudmsdisk/DiskArray.json')]"
    },
    "AzureSKUA2": {
      "vmSize": "Standard_A2",
      "diskCount": "2",
      "dataDisks": {
        "1": {
          "DiskName": "H",
          "DiskSize": "200"
        },
        "2": {
          "DiskName": "O",
          "DiskSize": "200"
        }
      },
      "diskCaching": "None",
      "diskSizeGB": 200,
      "vmDiskTemplate": "[concat(variables('DiskArtifacts'), 'cloudmsdisk/DiskArray.json')]"
    },
    "AzureSKUStandard_A2": {
      "vmSize": "Standard_A2",
      "diskCount": "1",
      "dataDisks": {
        "1": {
          "DiskName": "R",
          "DiskSize": "500"
        }
      },
      "diskCaching": "none",
      "diskSizeGB": 500,
      "vmDiskTemplate": "[concat(variables('DiskArtifacts'), 'cloudmsdisk/DiskArray.json')]"
    },
    "AzureSKUStandard_A4": {
      "vmSize": "Standard_A4",
      "diskCount": "2",
      "dataDisks": {
        "1": {
          "DiskName": "R",
          "DiskSize": "500"
        },
       "2": {
          "DiskName": "L",
          "DiskSize": "500"
        }
      },
      "diskCaching": "none",
      "diskSizeGB": 500,
      "vmDiskTemplate": "[concat(variables('DiskArtifacts'), 'cloudmsdisk/DiskArray.json')]"
    },
    "AzureSKU": "[variables(concat('AzureSKU', parameters('AzureSKU')))]"
  },
  "resources": [
        { 
       "apiVersion": "2015-01-01", 
       "name": "DataDisks",
       "type": "Microsoft.Resources/deployments",
          "properties": {
            "mode": "incremental",
            "templateLink": {
              "uri": "[variables('AzureSKU').vmDiskTemplate]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "vmName": "[concat(variables('vmName'),copyindex(1))]",
              "diskCount": { "value": "[variables('AzureSKU').diskCount]" },
              "diskCaching": { "value": "[variables('AzureSKU').diskCaching]" },
              "diskSizeGB": { "value": "[variables('AzureSKU').diskSizeGB]" },
              "userImageStorageAccountName": { "value": "[parameters('userImageStorageAccountName')]" }
            }
          },
      "copy": {
        "name": "DiskLoop",
        "count": "[parameters('numberOfInstances')]"
      } 
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyindex(1),'nic1')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]",
        "snoozeDate": "[parameters('snoozeDate')]"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'),copyindex(1))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine",
        "appID": "[parameters('appID')]",
        "orgID": "[parameters('orgID')]",
        "env": "[parameters('env')]",
        "snoozeDate": "[parameters('snoozeDate')]"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'),copyindex(1),'nic1')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('AzureSKU').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyindex(1))]",
          "adminUsername": "[parameters('localAdminUserName')]",
          "adminPassword": "[parameters('localAdminPassword')]",
          "windowsConfiguration": {
            "additionalUnattendContent": [
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "Autologon",
                "content": "[variables('autologonContent')]"
              },
              {
                "passName": "oobesystem",
                "componentName": "Microsoft-Windows-Shell-Setup",
                "settingName": "FirstLogonCommands",
                "content": "[variables('firstLogonCommands')]"
              }
            ],
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('sku')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('vmName'),copyindex(1),'-osDisk')]",
            "vhd": {
              "uri": "[concat(variables('osDiskVhdName'),copyindex(1),'.vhd')]"
            }
          },
        "dataDisks": "[reference('DataDisks').outputs.dataDiskArray.value]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyindex(1),'nic1'))]"
            }
          ]
        }
      }
    }
  ]
}
